#!/usr/bin/env ruby

require 'yaml'
require 'term/ansicolor'
require 'flashcards'

String.send(:include, Term::ANSIColor)

case ARGV.shift
  # flashcards add es 'Madre mia!' 'Oh my!'
when 'add', '+'
  unless ARGV.length == 3
    abort "Usage: #{$0} [lang] [word] [translation]"
  end

  load_do_then_save(ARGV[0]) do |data, lang, flashcards|
    unless flashcards.find { |flashcard| flashcard == Flashcard.new(expression: ARGV[1], translations: ARGV[2]) }
      flashcards << Flashcard.new(expression: ARGV[1], translations: [ARGV[2]])
      data[ARGV[0]] = flashcards.map(&:data)
    else
      warn "~ #{ARGV[1]} is already defined."
    end
  end
when 'reset'
  load_do_then_save do |data, lang, flashcards|
    data[lang] = flashcards.each { |flashcard| flashcard.metadata.clear }.map(&:data)
  end
when '--help', '-h'
  puts DATA.read
when nil
  load_do_then_save do |data, lang, flashcards|
    # Switch system language to whatever language you're learning.
    run(lang, flashcards)

    # Save metadata.
    data[lang] = flashcards.map(&:data)
  end
end

__END__
flashcards add [lang] [word] [translation]
flashcards add es todavÃ­a still

flashcards reset
  Reset metadata. Useful if you got someone else's file, and you want to reset his progress.

flashcards
