#!/usr/bin/env ruby

require 'flashcards/commander'
require 'flashcards/core_exts'

case ARGV.shift
when 'add', '+'
  Flashcards::Commander.add(ARGV)
when 'reset'
  Flashcards::Commander.reset
when 'edit'
  Flashcards::Commander.edit(ARGV)
when 'stats'
  Flashcards::Commander.stats
when nil
  Flashcards::Commander.run
else # -h, --help or anything else.
  puts(colourise(DATA.read))
end

__END__

<red.bold>:: Flashcards ::</red.bold>

<cyan.bold>Commands</cyan.bold>

flashcards <red>add</red> [word] [translations]
flashcards <red>add</red> todavía still
flashcards <red>add</red> casi almost,nearly  <bright_black># Add multiple translations.</bright_black>
flashcards <red>add</red> dónde,adónde where  <bright_black># Add multiple expressions.</bright_black>
flashcards <red>add</red> dar 'to give' <yellow>#verb</yellow> <bright_black># Add with a tag.</bright_black>

  <magenta>Multilingual mode</magenta> If you have more than one language configured in your
    <bright_black>~/.config/flashcards.yml</bright_black>, you can specify which one you want to add the
    flashcard into. Note that you don't have to do so if you have one
    langugage marked as the default one, but you always can.

    flashcards <red>add</red> <yellow>es</yellow> todavía still

flashcards <yellow>reset</yellow> es<bright_black> # Reset metadata for given language.
  # Useful if you got someone else's file, and you want to reset his progress.</bright_black>

flashcards <blue.bold>stats</blue.bold>

flashcards <green>edit</green>
flashcards <green>edit</green> es
<magenta.bold>EDITOR=vim</magenta.bold> flashcards <green>edit</green> <bright_black># Edit your flashcards in $EDITOR.</bright_black>

flashcards <bright_black># Run it!</bright_black>
