- Implement proxying tenses (see informal.rb).
- Metadata: tests for regular verbs should not occur as often as for exceptions (and the metadata needs to be stored elsewhere).
- support multiple documents (so one can have notes).
- Switch sides (ask in EN or in ES) (and deal with synonyms again).
  1st run: ask what does todavia mean
  2nd run: ask how do you say todavia
- add the posibility to undo.
- use wordreference or something reliable for the verify command.
- Add tests such as er vs. estar; por vs. para.
  {prompt: "Voy ____ el autob√∫s. (por 1 para 2)", answer: "por"}

# TODO: Rename #exception to #irregular or somethin'.
Tasks:
  Verbs:
  - Implement test_me_on.
  - Mnemotechnic aid: garfield / la gare .. + What to do about .hint?
    Change both translations and expression(s) to be either string or an array in the data,
    but always array after being parsed. If it's array with only one item, save as a string.
    (possibly use translation/translations keys)?

  The `flashcards` command:
  - Add `merge` (another yaml file), add pack attribute. Only allow names such as <lang>.<pack>.yml
  - Add `unmerge` [pack]: remove items from given pack.
  - Add `export`: export pack to a file <lang>.<pack>.yml
  - Add `packs`: list all packs.
  - Extend `verify`: also unknown attrs.

  ES:
  - Refactor verb to use proper terminology, reflective is not tense.

  Publish:
  - Tag (git) and publish the gem.

  After:
  - Full tests coverage including integration tests.

https://github.com/dam13n/motion-swipe
https://github.com/cycloped-io/wiktionary + there are also media wiki APIs that can be used.
https://en.wiktionary.org/w/api.php
